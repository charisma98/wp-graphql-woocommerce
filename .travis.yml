sudo: false
dist: trusty

language: php

notifications:
  email:
    on_success: never
    on_failure: never

branches:
  only:
    - master
    - develop

cache:
  apt: true
  directories:
    - vendor
    - $HOME/.composer/cache

# Set the global environment variables
env:
  global:
    - WP_CORE_DIR: /tmp/wordpress
    - COVERAGE: false

matrix:
  include:
    - php: 7.2
      env: WP_VERSION=latest COVERAGE=1
    - php: 7.1
      env: WP_VERSION=latest
    - php: 7.0
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=4.5
    - php: 5.6
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=trunk
    - php: 5.6
      env: PHPCS=1

install:
  - |
    cd $TRAVIS_BUILD_DIR
    curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x wp-cli.phar
    sudo mv wp-cli.phar /usr/local/bin/wp

before_script:
  - |
    if [ ! -z "$WP_VERSION" ]; then
      if [ "$COVERAGE" == "1" ]; then
        # Install Coveralls
        composer require php-coveralls/php-coveralls
      fi
      # Install and config tests
      composer self-update
      composer require lucatume/wp-browser:^2.2
      composer install --no-interaction
      mkdir -p build/logs
      cp tests/acceptance.suite.dist.yml tests/acceptance.suite.yml
      cp tests/functional.suite.dist.yml tests/functional.suite.yml
      cp tests/unit.suite.dist.yml tests/unit.suite.yml
      cp tests/wpunit.suite.dist.yml tests/wpunit.suite.yml
      cp .env.dist .env
      composer install-wp-tests
      ls -al
    fi   
  # Install PHP CodeSniffer and WPCS.
  - |
    if [ "$PHPCS" == "1" ]; then
      composer require squizlabs/php_codesniffer
      composer require phpcompatibility/phpcompatibility-wp
      composer require wp-coding-standards/wpcs
      composer require dealerdirect/phpcodesniffer-composer-installer
      composer install

      phpenv rehash

      ./vendor/bin/phpcs --config-set installed_paths '../../wimg/php-compatibility/,../../wp-coding-standards/wpcs/'
      ./vendor/bin/phpcs --config-set default_standard WordPress
    fi

script:
 # Execute unit tests with coverage if specified, otherwise without coverage
 - |
    if [ ! -z "$WP_VERSION" ]; then
      if [ "$COVERAGE" == "1" ]; then
        vendor/bin/codecept run wpunit --coverage --coverage-xml
      else
        vendor/bin/codecept run wpunit
      fi
    fi
 - |
    if [ "$PHPCS" == "1" ]; then
      ./vendor/bin/phpcs --standard=WordPress
    fi
  
